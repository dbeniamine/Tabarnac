#!/bin/bash
# Copyright (C) 2015  Beniamine, David <David@Beniamine.net>
# Author: Beniamine, David <David@Beniamine.net>
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

usage()
{
    echo -e "Usage :\n"
    echo "$0 [Options] -- cmd args"
    echo "      -r [Run options] -- cmd args"
    echo "      -p [Plot options] bench"
    echo -e "\nGeneral options\n"
    echo "  -h            Display this help and quit"
    echo "  -p bench      Do not run, plot only for benchmark named bench (no
                          need for -- cmd)"
    echo "  -r            Run only (do not plot)"
    echo -e "\nRun options:\n"
    echo "  -d directory  Set pin install directory, default: $PIN_HOME"
    echo -e "\nPlot options:\n"
    echo "  -i            Do not ignore smally used structures. This might
                          produce a hard to read output"
    echo "  -b            Do black and white plots"
    echo "  -s            Save plots (png files)"
    echo "  -t            Disable titles in figures"
    echo "  -S scale      Set the scale for saved figures implies -s"
    echo "  -R ratio      set plots_width=ratio*plot_height, default=1"
}

run=true
plot=true
titles=T
ratio=1
bw=F
save=F
ignore=TRUE
scale=1
while getopts "trbshp:S:iR:d:" opt; do
    case $opt in
        i)
            ignore=FALSE
            ;;
        r)
            plot=false
            ;;
        R)
            ratio=$OPTARG
            ;;
        t)
            titles=F
            ;;
        b)
            bw="T"
            ;;
        p)
            run=false
            PROG="$OPTARG"
            ;;
        s)
            save="T"
            ;;
        S)
            scale="$OPTARG"
            save="T"
            ;;
        h)
            usage
            exit 0
            ;;
        d)
            export PIN_HOME=$OPTARG
            echo "export PIN_HOME=$OPTARG"
            ;;
        \?)
            echo "Invalid option : -$OPTARG" >&2
            usage
            exit 1
            ;;
    esac
done
if $run
then
    if [ -z "$(echo $@ | cut -d '-' -f 3-)" ]
    then
        usage
        exit 1
    fi
    set -o errexit -o nounset -o pipefail

    # directory of this script
    DIR="$( cd -P "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"

    # recompile pintool if necessary
    (cd $DIR; make -q || make)

    # program to trace and its arguments
    PROGARGS=$(echo ${@} | sed s,.*--\ ,,)
    PROG=$(echo $PROGARGS | { read first rest; echo $(basename $first) | sed s,\\s.*,, ; } )


    # finally, run pin
    echo -e "\n\n## running pin: $PROGARGS"

    set -x
    time -p pin -xyzzy -enable_vsm 0 -t $DIR/obj-*/*.so -- $PROGARGS
    set +x

    # sort output page csv's according to page address
    for f in $PROG.*.page.csv; do
        sort -n -t, -k 1,1 -o $f $f
    done

    lstopo --no-io topo.png
fi

if $plot
then
    dir=$(pwd)
    cd $(dirname $0)
    mkdir -p ./figure/
    mv $dir/topo.png figure/

    Rscript plot.R $dir $PROG $save $bw $titles $scale $ignore $ratio
    # Clean and copi figures
    rm -rf $dir/figure plot.md
    mv ./figure $dir/
    cd -
    mv ./$PROG*.png ./figure/ > /dev/null 2>&1
fi
